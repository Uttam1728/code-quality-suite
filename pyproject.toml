[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "code-quality-combined"
version = "1.0.0"
description = "A comprehensive code quality analysis suite combining multiple Python analysis tools"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Code Quality Combined Contributors", email = "your-email@example.com"}
]
maintainers = [
    {name = "Code Quality Combined Contributors", email = "your-email@example.com"}
]
keywords = [
    "code-quality",
    "static-analysis", 
    "python",
    "linting",
    "testing",
    "coverage",
    "pylint",
    "vulture",
    "docstring",
    "development-tools"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: Console",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "pylint>=2.17.0",
    "vulture>=2.7", 
    "coverage>=7.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "colorama>=0.4.6",
    "tabulate>=0.9.0"
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "pytest-mock>=3.10.0"
]
performance = [
    "psutil>=5.9.0"
]

[project.urls]
Homepage = "https://github.com/your-username/code-quality-combined"
Documentation = "https://github.com/your-username/code-quality-combined#readme"
Repository = "https://github.com/your-username/code-quality-combined.git"
"Bug Tracker" = "https://github.com/your-username/code-quality-combined/issues"
Changelog = "https://github.com/your-username/code-quality-combined/blob/main/CHANGELOG.md"

[project.scripts]
code-quality-check = "code_quality_combined.run_code_quality_suite:main"
cqc = "code_quality_combined.run_code_quality_suite:main"

[tool.setuptools.packages.find]
include = ["code_quality_combined*"]

[tool.setuptools.package-data]
code_quality_combined = ["needed_files/*.json", "cq_reports/*.json", "*.md", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["code_quality_combined"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=code_quality_combined",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
] 